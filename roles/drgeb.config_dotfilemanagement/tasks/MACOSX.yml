---
# - name: Ensure config alias exists.
#   lineinfile:
#     path: "/{{ dev_home }}/{{ dev_user }}/.aliases"
#     line: "alias config='git --git-dir={{ git_project_workspace_dir }}/cfg --work-tree=${HOME}'"
#     owner: "{{ dev_user }}"
#     regexp: "^alias config="
#     state: present
#     insertafter: EOF
#     create: True
#     mode: "0644"

# - name: Ensure .cfg folder is ignored by git.
#   lineinfile:
#     path: "/{{ dev_home }}/{{ dev_user }}/.gitignore"
#     line: ".cfg"
#     owner: "{{ dev_user }}"
#     regexp: "^.cfg"
#     state: present
#     insertafter: EOF
#     create: True
#     mode: "0644"

- name: Ensure config git project bare clone exists in home folder
  ansible.builtin.git:
      repo: '{{ git_cfg_repo }}'
      dest: '{{ git_cfg_project_workspace_dir }}'
      version: latest
      bare: yes

- name: Ensure git file exist inside the repo
  lineinfile:
    path: "{{ git_project_workspace_dir }}/.git"
    line: "gitdir: .bare"
    owner: "{{ dev_user }}"
    state: present
    insertafter: EOF
    create: True
    mode: "0644"

#   ansible.builtin.git:
#       repo: '{{ git_cfg_repo }}''
#       dest: ''
#       version: latest
#       bare: yes

# - name: Ensure a worktree for the exists

# - name: Ensure the bare repo checkout exists and origin is properly set.
#   shell: 
#       git --git-dir=/{{ git_project_workspace_dir }}/cfg --work-tree={{ ansible_env.HOME }} checkout UbuntuApp --force 
#   args:
#     creates: "{{ ansible_env.HOME }}/bin/setup/setup-dev.sh"
